From 6bb30294ae49f46b244a2b6ed8d087687f9e45e2 Mon Sep 17 00:00:00 2001
From: nxa15299 <Heinz.Wrobel@nxp.com>
Date: Sat, 20 Jan 2018 17:55:41 +0100
Subject: [PATCH] pseudo: openat and __openat_2 flags handling was broken

Technically, flags should be filtered here to do the right thing about
O_NOFOLLOW, but that is a separate topic.

Signed-off-by: nxa15299 <Heinz.Wrobel@nxp.com>
---
 ports/linux/wrapfuncs.in | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/ports/linux/wrapfuncs.in b/ports/linux/wrapfuncs.in
index 0ef2357..9f9cacb 100644
--- a/ports/linux/wrapfuncs.in
+++ b/ports/linux/wrapfuncs.in
@@ -6,8 +6,8 @@ int __fxstat(int ver, int fd, struct stat *buf);
 int lchown(const char *path, uid_t owner, gid_t group); /* flags=AT_SYMLINK_NOFOLLOW */
 int __fxstatat(int ver, int dirfd, const char *path, struct stat *buf, int flags);
 int faccessat(int dirfd, const char *path, int mode, int flags);
-int openat(int dirfd, const char *path, int flags, ...{mode_t mode});
-int __openat_2(int dirfd, const char *path, int flags);
+int openat(int dirfd, const char *path, int flags, ...{mode_t mode}); /* flags=0 */
+int __openat_2(int dirfd, const char *path, int flags); /* flags=0 */
 int mknod(const char *path, mode_t mode, dev_t dev); /* real_func=pseudo_mknod */
 int mknodat(int dirfd, const char *path, mode_t mode, dev_t dev); /* real_func=pseudo_mknodat */
 int __xmknod(int ver, const char *path, mode_t mode, dev_t *dev); /* flags=AT_SYMLINK_NOFOLLOW */
-- 
2.15.1

