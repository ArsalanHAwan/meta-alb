From 25216ddc43466ddcc6f8e07534e0a1bce2bd9bd0 Mon Sep 17 00:00:00 2001
From: Heinz Wrobel <Heinz.Wrobel@nxp.com>
Date: Fri, 12 Oct 2018 17:55:48 +0200
Subject: [PATCH] linux-user: getsockopt() syscall was not treating length
 correctly.

When SO_PEERSEC failed to work properly it turned out that
the length arg/result method was not properly implemented.
This should be better now.

Signed-off-by: Heinz Wrobel <Heinz.Wrobel@nxp.com>
---
 linux-user/syscall.c | 64 ++++++++++++++++++++++++++++++++++++----------------
 1 file changed, 44 insertions(+), 20 deletions(-)

diff --git a/linux-user/syscall.c b/linux-user/syscall.c
index a00d939..c2c32a7 100644
--- a/linux-user/syscall.c
+++ b/linux-user/syscall.c
@@ -3208,6 +3208,7 @@ static abi_long do_getsockopt(int sockfd, int level, int optname,
     abi_long ret;
     int len, val;
     socklen_t lv;
+    void *addr;
 
     switch(level) {
     case TARGET_SOL_SOCKET:
@@ -3234,12 +3235,15 @@ static abi_long do_getsockopt(int sockfd, int level, int optname,
             crlen = sizeof(cr);
             ret = get_errno(getsockopt(sockfd, level, SO_PEERCRED,
                                        &cr, &crlen));
+            if (len != crlen) {
+                len = crlen;
+                if (put_user_u32(len, optlen)) {
+                    return -TARGET_EFAULT;
+                }
+            }
             if (ret < 0) {
                 return ret;
             }
-            if (len > crlen) {
-                len = crlen;
-            }
             if (!lock_user_struct(VERIFY_WRITE, tcr, optval_addr, 0)) {
                 return -TARGET_EFAULT;
             }
@@ -3247,9 +3251,6 @@ static abi_long do_getsockopt(int sockfd, int level, int optname,
             __put_user(cr.uid, &tcr->uid);
             __put_user(cr.gid, &tcr->gid);
             unlock_user_struct(tcr, optval_addr, 1);
-            if (put_user_u32(len, optlen)) {
-                return -TARGET_EFAULT;
-            }
             break;
         }
         /* Options with 'int' argument.  */
@@ -3306,6 +3307,15 @@ static abi_long do_getsockopt(int sockfd, int level, int optname,
         case TARGET_SO_ACCEPTCONN:
             optname = SO_ACCEPTCONN;
             goto int_case;
+        case TARGET_SO_PEERSEC:
+            optname = SO_PEERSEC;
+            if (get_user_u32(len, optlen))
+                return -TARGET_EFAULT;
+            if (len < 0)
+                return -TARGET_EINVAL;
+            addr = alloca(len);
+            lv = len;
+            goto generic_case;
         default:
             goto int_case;
         }
@@ -3317,24 +3327,38 @@ static abi_long do_getsockopt(int sockfd, int level, int optname,
             return -TARGET_EFAULT;
         if (len < 0)
             return -TARGET_EINVAL;
-        lv = sizeof(lv);
-        ret = get_errno(getsockopt(sockfd, level, optname, &val, &lv));
+        if (len < sizeof(val))
+            return -TARGET_ERANGE;
+        addr = &val;
+        lv = sizeof(val);
+    generic_case:
+        ret = get_errno(getsockopt(sockfd, level, optname, addr, &lv));
+        if (lv != len) {
+            len = lv;
+            if (put_user_u32(len, optlen))
+                return -TARGET_EFAULT;
+        }
         if (ret < 0)
             return ret;
-        if (optname == SO_TYPE) {
-            val = host_to_target_sock_type(val);
+        if (addr == &val) {
+            if (optname == SO_TYPE) {
+                val = host_to_target_sock_type(val);
+            }
+            if (len == 4) {
+                if (put_user_u32(val, optval_addr))
+                    return -TARGET_EFAULT;
+            } else {
+                if (put_user_u8(val, optval_addr))
+                    return -TARGET_EFAULT;
+            }
         }
-        if (len > lv)
-            len = lv;
-        if (len == 4) {
-            if (put_user_u32(val, optval_addr))
-                return -TARGET_EFAULT;
-        } else {
-            if (put_user_u8(val, optval_addr))
-                return -TARGET_EFAULT;
+        else {
+            int i;
+            for (i = 0; i < len; i++) {
+                if (put_user_u8((uint8_t *)addr + i, optval_addr + i))
+                    return -TARGET_EFAULT;
+            }
         }
-        if (put_user_u32(len, optlen))
-            return -TARGET_EFAULT;
         break;
     case SOL_IP:
         switch(optname) {
-- 
1.8.3.1

