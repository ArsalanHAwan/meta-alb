#
# This is not quite the default NOR flash environment shipped for the T4 RDB.
# Changes for the BlueBox follow the original line in comments if a
# match is reasonably possible.
#
# <Heinz.Wrobel@nxp.com>
#
#----------------------------------------------------------------------
# The following macros with angle brackets will be automagically
# replaced when building the binary environment:
#       <fdt_name>      Basename of KERNEL_DEVICETREE
#       <kernel_name>   UBOOT_KERNEL_IMAGETYPE if it has been set,
#                       otherwise KERNEL_IMAGETYPE
#       <machine>       MACHINE
#----------------------------------------------------------------------
#
baudrate=115200
#bdev=sda3
#bootargs=root=/dev/ram rw console=ttyS0,115200
#bootcmd=setenv bootargs root=/dev/ram rw console=$consoledev,$baudrate $othbootargs;bootm e8020000 e9300000 e8800000
boot_from_flash=run loadcmd_flash; run bootcmd_flash
bootcmd=run bootcmd_debug; \
        run silentfan; \
        mmc dev ${mmcdev}; \
        if run loadbootscript; then \
                run bootscript; \
        elif test -n "$enablenfs" && test $enablenfs -gt 0 && run loadcmd_nfs; then \
		run bootcmd_nfs; \
        elif run loadcmd_sdhc; then \
                run bootcmd_sdhc; \
        elif run loadcmd_ssd; then \
                run bootcmd_ssd; \
        elif run loadcmd_flash; then \
                run bootcmd_flash; \
        else echo Automatic boot failed.; \
        fi;
bootcmd_debug=true
bootcmd_flash=echo Booting from NOR flash...; setenv bootdev ram0; setenv bootargsextra ramdisk_size=$ramdisk_size; run setbootargs; bootm $kernel_start $ramdisk_start $fdt_start
bootcmd_ssd=echo Booting from SSD ...; setenv bootdev sda${scsipart}; setenv bootargsextra noinitrd; run setbootargs; bootm $kernel_load - $fdt_load
bootcmd_sdhc=echo Booting from SDHC...; setenv bootdev mmcblk0p${mmcpart}; setenv bootargsextra noinitrd; run setbootargs; bootm $kernel_load - $fdt_load
bootcmd_nfs=echo Booting via NFS...; setenv bootdev nfs; setenv bootargsextra rw nfsroot=$serverip:$rootpath ip=$ipaddr:$serverip:$gatewayip:$netmask:$hostname:$netdev:off; run setbootargs; bootm $kernel_load - $fdt_addr
bootdelay=3
#bootfile=uImage
bootscript=echo Running bootscript from mmc ...; source
consoledev=ttyS0
eth10addr=00:04:9f:00:7a:0a
eth11addr=00:04:9f:00:7a:0b
eth12addr=00:04:9f:00:7a:0c
eth13addr=00:04:9f:00:7a:0d
eth14addr=00:04:9f:00:7a:0e
eth15addr=00:04:9f:00:7a:0f
eth1addr=00:04:9f:00:7a:01
eth2addr=00:04:9f:00:7a:02
eth3addr=00:04:9f:00:7a:03
eth4addr=00:04:9f:00:7a:04
eth5addr=00:04:9f:00:7a:05
eth6addr=00:04:9f:00:7a:06
eth7addr=00:04:9f:00:7a:07
eth8addr=00:04:9f:00:7a:08
eth9addr=00:04:9f:00:7a:09
ethact=FM1@DTSEC1
ethaddr=00:04:9f:00:7a:00
ethprime=FM1@DTSEC5
#fdtaddr=e00000
fdt_load=0x00e00000
#fdtfile=t4240qds/t4240qds.dtb
fdt_name=boot/<fdt_name>
fdt_start=0xe8800000
fileaddr=1000000
filesize=200000
fman_ucode=0xeff40000
#gatewayip=192.168.1.1
gatewayip=192.168.2.1
hwconfig=fsl_ddr:ctlr_intlv=3way_4KB,bank_intlv=auto;fsl_fm1_xaui_phy:xfi;fsl_fm2_xaui_phy:xfi
hvboot=setenv bootargs console=ttyS0,115200 config-addr=0xfe8900000;bootm 0xfe8700000 - 0xfe8800000
#ipaddr=192.168.1.3
ipaddr=192.168.2.100
loadcmd_flash=echo Loading from flash at $kernel_start...;
loadcmd_ssd=echo Searching for boot image on SSD...; sata init; sata info && ext2load sata ${scsidev}:${scsipart} $kernel_load $kernel_name && ext2load sata ${scsidev}:${scsipart} $fdt_load $fdt_name

loadcmd_sdhc=echo Searching for boot image on SD-Card...; mmc rescan && mmc info && ext2load mmc ${mmcdev}:${mmcpart} $kernel_load $kernel_name && ext2load mmc ${mmcdev}:${mmcpart} $fdt_load $fdt_name
loadcmd_nfs=echo Searching for NFS boot image via TFTP...; tftp $kernel_load <machine>/$kernel_name;tftp $fdt_load <machine>/$fdt_name;
machine=<machine>
mmcdev=0
mmcpart=2
kernel_load=0x01000000
kernel_name=boot/<kernel_name>
kernel_size=0x02a00000
kernel_start=0xe8020000
loadaddr=1000000
netdev=fm1-mac1
loadbootscript=mmc rescan && fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};
netmask=255.255.255.0
progfile=tftp $loadaddr $file && protect off $addr +$filesize && erase $addr +$filesize && cp.b $loadaddr $addr $filesize && cmp.b $loadaddr $addr $filesize
#nfsboot=setenv bootargs root=/dev/nfs rw nfsroot=$serverip:$rootpath ip=$ipaddr:$serverip:$gatewayip:$netmask:$hostname:$netdev:off console=$consoledev,$baudrate $othbootargs;tftp $loadaddr $bootfile;tftp $fdtaddr $fdtfile;bootm $loadaddr - $fdtaddr
#ramboot=setenv bootargs root=/dev/ram rw console=$consoledev,$baudrate $othbootargs;tftp $ramdiskaddr $ramdiskfile;tftp $loadaddr $bootfile;tftp $fdtaddr $fdtfile;bootm $loadaddr $ramdiskaddr $fdtaddr
ramdisk_addr=2000000
ramdisk_size=0x2000000
ramdisk_start=0xe9300000
#ramdiskfile=t4240qds/ramdisk.uboot
#ramdiskfile=t4240rdb/ramdisk.uboot
rootpath=/opt/nfsroot/$machine
script=boot.scr
scsidev=0
scsidevs=1
scsipart=1
#serverip=192.168.1.1
serverip=192.168.2.1
setbootargs=setenv bootargs console=$consoledev,$baudrate root=/dev/$bootdev $bootargsextra $bootargs_debug
#sataboot=setenv bootargs root=/dev/sda1 rootdelay=5 rw console=$consoledev,$baudrate $othbootargs;bootm e8020000 - e8800000
silentfan_addr=setenv w8 2f; if test -z "$fanspeed"; then setenv fanspeed 10; fi; 
silentfan=run silentfan_addr; i2c mw $w8 0.1 80; i2c mw $w8 58.1 1; i2c mw $w8 5c.1 3; for i in b4 b5 b6 b7 b8; do i2c mw $w8 $i.1 $fanspeed; done; setenv w8;
stderr=serial
stdin=serial
stdout=serial
#tftpflash=tftpboot $loadaddr $uboot && protect off $ubootaddr +$filesize && erase $ubootaddr +$filesize && cp.b $loadaddr $ubootaddr $filesize && protect on $ubootaddr +$filesize && cmp.b $loadaddr $ubootaddr $filesize
#uboot="u-boot.bin"
#ubootaddr=0xeff40000
