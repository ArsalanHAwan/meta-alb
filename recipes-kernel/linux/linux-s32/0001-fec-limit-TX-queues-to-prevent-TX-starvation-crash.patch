From 529f2786d622c14e10b4d812573a219c78f7056f Mon Sep 17 00:00:00 2001
From: Vicovan Ionut-Valentin <Ionut.Vicovan@nxp.com>
Date: Fri, 16 Nov 2018 10:58:32 +0200
Subject: [PATCH] fec: limit TX queues to prevent TX starvation crash

Heavy write to NFS (files > 4MB) results in FEC TX queue 0 starvation.
This happens because traffic is shared between the high priority
queues 1 and 2 (used for AVB streaming), which
leads to starvation for low priority queue 0.
This generates exception and dumping of the TX buffers, which
blocks the console and the kernel execution.

Workaround is to use only the default TX queue 0 in order to
prevent starvation.

Issue: ALB-2941
Signed-off-by: Vicovan Ionut-Valentin <Ionut.Vicovan@nxp.com>
---
 arch/arm64/boot/dts/freescale/s32v234.dtsi | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/arm64/boot/dts/freescale/s32v234.dtsi b/arch/arm64/boot/dts/freescale/s32v234.dtsi
index 3edfd9f..9ca712a 100644
--- a/arch/arm64/boot/dts/freescale/s32v234.dtsi
+++ b/arch/arm64/boot/dts/freescale/s32v234.dtsi
@@ -271,7 +271,7 @@
 				clock-names = "ipg", "ahb", "ptp",
 					      "enet_clk_ref",
 					      "enet_out";
-				fsl,num-tx-queues=<3>;
+				fsl,num-tx-queues=<1>;
 				fsl,num-rx-queues=<3>;
 				status = "disabled";
 			};
-- 
2.7.4

